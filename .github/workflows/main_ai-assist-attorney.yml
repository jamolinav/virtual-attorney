name: Build and deploy Node.js app to Azure Web App - ai-assist-attorney

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Enable Corepack
        run: corepack enable

      - name: Activate pnpm
        run: corepack prepare pnpm@8.15.0 --activate

      - name: Install deps (monorepo)
        run: pnpm install --frozen-lockfile

      - name: Build all
        run: pnpm -r build

      # ðŸ‘‡ Empaqueta SOLO lo que vas a desplegar
      # Si es un frontend Next.js, puedes empaquetar .next/standalone o el output de tu build
      - name: Archive artifact
        run: |
          mkdir -p dist
          # TODO: ajusta esta ruta al artefacto real de tu app
          tar -czf dist/app.tgz -C apps/web/.next/standalone .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: dist/app.tgz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact
          path: dist

      - name: Azure login (federated)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3831D22F493B47F095C84D5E065B2349 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8DBB62A5EFAE495D8AEFFDC533B8111C }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6660088B436542ECA0DE265451C78B01 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ai-assist-attorney
          slot-name: Production
          package: dist/app.tgz
