# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - ai-assist-attorney

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.15.0
          run_install: false

      - name: Pre-process workspace references for npm compatibility
        run: |
          # Create a script to temporarily replace workspace:* references with *
          cat > fix-workspace-refs.js << 'EOF'
          const fs = require('fs');
          const path = require('path');

          function processPackageJson(filePath) {
            console.log(`Processing: ${filePath}`);
            const content = fs.readFileSync(filePath, 'utf8');
            try {
              const pkg = JSON.parse(content);
              let modified = false;

              // Check and replace in dependencies
              if (pkg.dependencies) {
                Object.keys(pkg.dependencies).forEach(dep => {
                  if (pkg.dependencies[dep].startsWith('workspace:')) {
                    pkg.dependencies[dep] = '*';
                    modified = true;
                  }
                });
              }

              // Check and replace in devDependencies
              if (pkg.devDependencies) {
                Object.keys(pkg.devDependencies).forEach(dep => {
                  if (pkg.devDependencies[dep].startsWith('workspace:')) {
                    pkg.devDependencies[dep] = '*';
                    modified = true;
                  }
                });
              }

              // Save if modified
              if (modified) {
                fs.writeFileSync(filePath, JSON.stringify(pkg, null, 2));
                console.log(`Updated: ${filePath}`);
              }
            } catch (e) {
              console.error(`Error processing ${filePath}:`, e);
            }
          }

          function findAndProcessPackageFiles(dir) {
            const entries = fs.readdirSync(dir, { withFileTypes: true });

            for (const entry of entries) {
              const fullPath = path.join(dir, entry.name);
              
              if (entry.isDirectory()) {
                // Skip node_modules
                if (entry.name !== 'node_modules') {
                  findAndProcessPackageFiles(fullPath);
                }
              } else if (entry.name === 'package.json') {
                processPackageJson(fullPath);
              }
            }
          }

          // Start processing from the root directory
          findAndProcessPackageFiles('.');
          EOF
          
          # Run the script to fix workspace references
          node fix-workspace-refs.js
          
          # Now install dependencies with npm
          npm install @actions/core@1.6.0 @actions/http-client
          
          # Install with pnpm (after fixing references)
          pnpm install --no-frozen-lockfile
          
          # Build the project
          pnpm run build --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3831D22F493B47F095C84D5E065B2349 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8DBB62A5EFAE495D8AEFFDC533B8111C }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6660088B436542ECA0DE265451C78B01 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ai-assist-attorney'
          slot-name: 'Production'
          package: .
          